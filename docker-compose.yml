version: "3.8"

services:
  cassandra:
    image: cassandra:3.11
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=dc1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_START_RPC=true
    networks:
      - etl_weather_networks

  cqlsh:
    image: nuvo/docker-cqlsh
    container_name: cqlsh
    depends_on:
      - cassandra
    volumes:
      - ./config/cassandra/data.cql:/scripts/data.cql
      - ./config/cassandra/wait-for-cassandra.sh:/scripts/wait-for-cassandra.sh
    entrypoint: ["/bin/sh", "-c", "/scripts/wait-for-cassandra.sh"]
    environment:
      - CQLSH_HOST=cassandra
      - CQLSH_PORT=9042
      - CQLVERSION=3.4.4
    networks:
      - etl_weather_networks

  extract_weather_api:       
    build:
      context: .
      dockerfile: ./config/python/Dockerfile
    container_name: extract_weather_api
    depends_on:
      - cassandra
    volumes:
      - ./scripts:/app/scripts
    command: ["python3", "/app/scripts/extract_weather_api.py"]
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - OPENWEATHER_BASE_URL=${OPENWEATHER_BASE_URL}
    env_file:
      - .env
    networks:
      - etl_weather_networks

  spark:
    build:
      context: .
      dockerfile: ./config/spark/Dockerfile
    container_name: spark
    depends_on:
      - cassandra
    environment:
      - PYSPARK_PYTHON=python3
      - JAVA_HOME=/opt/java/openjdk
    ports:
      - "4040:4040"
    entrypoint: ["/bin/bash", "-c"] 
    command: ["/opt/spark/bin/spark-submit --packages com.datastax.spark:spark-cassandra-connector_2.12:3.3.0 /app/scripts/load_to_cassandra.py"]    
    volumes:
      - ./scripts:/app/scripts
      - ./config/spark/.ivy2:/home/spark/.ivy2
    networks:
      - etl_weather_networks

  nifi:
    image: apache/nifi:latest
    container_name: nifi
    ports:
      - "8443:8443"
    environment:
      - NIFI_WEB_HTTPS_PORT=8443
      - SINGLE_USER_CREDENTIALS_USERNAME=${SINGLE_USER_CREDENTIALS_USERNAME}
      - SINGLE_USER_CREDENTIALS_PASSWORD=${SINGLE_USER_CREDENTIALS_PASSWORD}
    volumes:
      - ./config/nifi/data:./opt/nifi/nifi-current/data
      - ./config/nifi/retry_failures:./opt/nifi/nifi-current/retry_failures
      - ./config/nifi/templates:/opt/nifi/nifi-current/conf/templates
    networks:
      - etl_weather_networks

networks:
  etl_weather_networks:
    driver: bridge